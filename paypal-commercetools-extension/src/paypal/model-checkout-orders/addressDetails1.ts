/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The non-portable additional address details include fine-grain address information for Compliance, Risk, and other scenarios. This isn\'t portable with common third-party and open source applications. This can include data that is redundant with core fields. For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`.
 */
export class AddressDetails1 {
  /**
   * The street number.
   */
  'streetNumber'?: string;
  /**
   * The street name. Just `Drury` in `Drury Lane`.
   */
  'streetName'?: string;
  /**
   * The street type. For example, avenue, boulevard, road, or expressway.
   */
  'streetType'?: string;
  /**
   * The delivery service. Post office box, bag number, or post office name.
   */
  'deliveryService'?: string;
  /**
   * A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>.
   */
  'buildingName'?: string;
  /**
   * The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment.
   */
  'subBuilding'?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'streetNumber',
      baseName: 'street_number',
      type: 'string',
    },
    {
      name: 'streetName',
      baseName: 'street_name',
      type: 'string',
    },
    {
      name: 'streetType',
      baseName: 'street_type',
      type: 'string',
    },
    {
      name: 'deliveryService',
      baseName: 'delivery_service',
      type: 'string',
    },
    {
      name: 'buildingName',
      baseName: 'building_name',
      type: 'string',
    },
    {
      name: 'subBuilding',
      baseName: 'sub_building',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return AddressDetails1.attributeTypeMap;
  }
}
