/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CheckoutPaymentIntent } from './checkoutPaymentIntent';
import { OrderApplicationContext } from './orderApplicationContext';
import { Payer } from './payer';
import { PaymentSource } from './paymentSource';
import { PurchaseUnitRequest } from './purchaseUnitRequest';

/**
 * The order request details.
 */
export class OrderRequest {
  'intent': CheckoutPaymentIntent;
  'payer'?: Payer;
  /**
   * An array of purchase units. Each purchase unit establishes a contract between a payer and the payee. Each purchase unit represents either a full or partial order that the payer intends to purchase from the payee.
   */
  'purchaseUnits': Array<PurchaseUnitRequest>;
  'paymentSource'?: PaymentSource;
  'applicationContext'?: OrderApplicationContext;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'intent',
      baseName: 'intent',
      type: 'CheckoutPaymentIntent',
    },
    {
      name: 'payer',
      baseName: 'payer',
      type: 'Payer',
    },
    {
      name: 'purchaseUnits',
      baseName: 'purchase_units',
      type: 'Array<PurchaseUnitRequest>',
    },
    {
      name: 'paymentSource',
      baseName: 'payment_source',
      type: 'PaymentSource',
    },
    {
      name: 'applicationContext',
      baseName: 'application_context',
      type: 'OrderApplicationContext',
    },
  ];

  static getAttributeTypeMap() {
    return OrderRequest.attributeTypeMap;
  }
}

export namespace OrderRequest {}
