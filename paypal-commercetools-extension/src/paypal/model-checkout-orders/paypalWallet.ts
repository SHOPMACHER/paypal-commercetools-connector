/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressPortable2 } from './addressPortable2';
import { Name2 } from './name2';
import { PaypalWalletAttributes } from './paypalWalletAttributes';
import { PaypalWalletExperienceContext } from './paypalWalletExperienceContext';
import { PhoneWithType } from './phoneWithType';
import { TaxInfo } from './taxInfo';

/**
 * A resource that identifies a PayPal Wallet is used for payment.
 */
export class PaypalWallet {
  /**
   * The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant\'s server so the saved payment source can be used for future transactions.
   */
  'vaultId'?: string;
  /**
   * The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
   */
  'emailAddress'?: string;
  'name'?: Name2;
  'phone'?: PhoneWithType;
  /**
   * The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years.
   */
  'birthDate'?: string;
  'taxInfo'?: TaxInfo;
  'address'?: AddressPortable2;
  'attributes'?: PaypalWalletAttributes;
  'experienceContext'?: PaypalWalletExperienceContext;
  /**
   * The PayPal billing agreement ID. References an approved recurring payment for goods or services.
   */
  'billingAgreementId'?: string;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'vaultId',
      baseName: 'vault_id',
      type: 'string',
    },
    {
      name: 'emailAddress',
      baseName: 'email_address',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'Name2',
    },
    {
      name: 'phone',
      baseName: 'phone',
      type: 'PhoneWithType',
    },
    {
      name: 'birthDate',
      baseName: 'birth_date',
      type: 'string',
    },
    {
      name: 'taxInfo',
      baseName: 'tax_info',
      type: 'TaxInfo',
    },
    {
      name: 'address',
      baseName: 'address',
      type: 'AddressPortable2',
    },
    {
      name: 'attributes',
      baseName: 'attributes',
      type: 'PaypalWalletAttributes',
    },
    {
      name: 'experienceContext',
      baseName: 'experience_context',
      type: 'PaypalWalletExperienceContext',
    },
    {
      name: 'billingAgreementId',
      baseName: 'billing_agreement_id',
      type: 'string',
    },
  ];

  static getAttributeTypeMap() {
    return PaypalWallet.attributeTypeMap;
  }
}
