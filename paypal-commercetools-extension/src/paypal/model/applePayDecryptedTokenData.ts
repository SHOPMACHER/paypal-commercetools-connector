/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApplePayPaymentData } from './applePayPaymentData';
import { Card } from './card';
import { Money2 } from './money2';

/**
 * Information about the Payment data obtained by decrypting Apple Pay token.
 */
export class ApplePayDecryptedTokenData {
  'transactionAmount'?: Money2;
  'tokenizedCard': Card;
  /**
   * Apple Pay Hex-encoded device manufacturer identifier. The pattern is defined by an external party and supports Unicode.
   */
  'deviceManufacturerId'?: string;
  /**
   * Indicates the type of payment data passed, in case of Non China the payment data is 3DSECURE and for China it is EMV.
   */
  'paymentDataType'?: ApplePayDecryptedTokenData.PaymentDataTypeEnum;
  'paymentData'?: ApplePayPaymentData;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'transactionAmount',
      baseName: 'transaction_amount',
      type: 'Money2',
    },
    {
      name: 'tokenizedCard',
      baseName: 'tokenized_card',
      type: 'Card',
    },
    {
      name: 'deviceManufacturerId',
      baseName: 'device_manufacturer_id',
      type: 'string',
    },
    {
      name: 'paymentDataType',
      baseName: 'payment_data_type',
      type: 'ApplePayDecryptedTokenData.PaymentDataTypeEnum',
    },
    {
      name: 'paymentData',
      baseName: 'payment_data',
      type: 'ApplePayPaymentData',
    },
  ];

  static getAttributeTypeMap() {
    return ApplePayDecryptedTokenData.attributeTypeMap;
  }
}

export namespace ApplePayDecryptedTokenData {
  export enum PaymentDataTypeEnum {
    _3Dsecure = <any>'3DSECURE',
    Emv = <any>'EMV',
  }
}
