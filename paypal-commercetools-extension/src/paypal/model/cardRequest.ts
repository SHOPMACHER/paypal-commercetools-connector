/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressPortable } from './addressPortable';
import { CardAttributes } from './cardAttributes';
import { CardBrand } from './cardBrand';
import { CardStoredCredential } from './cardStoredCredential';
import { CardType } from './cardType';

/**
 * The payment card to use to fund a payment. Can be a credit or debit card.<blockquote><strong>Note:</strong> Passing card number, cvv and expiry directly via the API requires <a href=\"https://www.pcisecuritystandards.org/pci_security/completing_self_assessment\"> PCI SAQ D compliance</a>. <br>*PayPal offers a mechanism by which you do not have to take on the <strong>PCI SAQ D</strong> burden by using hosted fields - refer to <a href=\"https://developer.paypal.com/docs/checkout/advanced/integrate/\">this Integration Guide</a>*.</blockquote>
 */
export class CardRequest {
  /**
   * The identifier of the instrument.
   */
  'id'?: string;
  /**
   * The card holder\'s name as it appears on the card.
   */
  'name'?: string;
  /**
   * The primary account number (PAN) for the payment card.
   */
  'number'?: string;
  /**
   * The year and month, in ISO-8601 `YYYY-MM` date format. See [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6).
   */
  'expiry'?: string;
  /**
   * The three- or four-digit security code of the card. Also known as the CVV, CVC, CVN, CVE, or CID. This parameter cannot be present in the request when `payment_initiator=MERCHANT`.
   */
  'securityCode'?: string;
  /**
   * The last digits of the payment card.
   */
  'lastDigits'?: string;
  'cardType'?: CardBrand;
  'type'?: CardType;
  'brand'?: CardBrand;
  'billingAddress'?: AddressPortable;
  'attributes'?: CardAttributes;
  /**
   * The PayPal-generated ID for the vaulted payment source. This ID should be stored on the merchant\'s server so the saved payment source can be used for future transactions.
   */
  'vaultId'?: string;
  'storedCredential'?: CardStoredCredential;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'string',
    },
    {
      name: 'number',
      baseName: 'number',
      type: 'string',
    },
    {
      name: 'expiry',
      baseName: 'expiry',
      type: 'string',
    },
    {
      name: 'securityCode',
      baseName: 'security_code',
      type: 'string',
    },
    {
      name: 'lastDigits',
      baseName: 'last_digits',
      type: 'string',
    },
    {
      name: 'cardType',
      baseName: 'card_type',
      type: 'CardBrand',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'CardType',
    },
    {
      name: 'brand',
      baseName: 'brand',
      type: 'CardBrand',
    },
    {
      name: 'billingAddress',
      baseName: 'billing_address',
      type: 'AddressPortable',
    },
    {
      name: 'attributes',
      baseName: 'attributes',
      type: 'CardAttributes',
    },
    {
      name: 'vaultId',
      baseName: 'vault_id',
      type: 'string',
    },
    {
      name: 'storedCredential',
      baseName: 'stored_credential',
      type: 'CardStoredCredential',
    },
  ];

  static getAttributeTypeMap() {
    return CardRequest.attributeTypeMap;
  }
}

export namespace CardRequest {}
