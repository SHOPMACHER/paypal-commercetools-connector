/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PaymentMethod } from './paymentMethod';
import { StoredPaymentSource } from './storedPaymentSource';

/**
 * Customizes the payer experience during the approval process for the payment with PayPal.<blockquote><strong>Note:</strong> Partners and Marketplaces might configure <code>brand_name</code> and <code>shipping_preference</code> during partner account setup, which overrides the request values.</blockquote>
 */
export class OrderApplicationContext {
  /**
   * DEPRECATED. The label that overrides the business name in the PayPal account on the PayPal site. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.brand_name`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'brandName'?: string;
  /**
   * The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/api/rest/reference/country-codes/) or [M49 region code](https://unstats.un.org/unsd/methodology/m49/).
   */
  'locale'?: string;
  /**
   * DEPRECATED. DEPRECATED. The type of landing page to show on the PayPal site for customer checkout.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.landing_page`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'landingPage'?: OrderApplicationContext.LandingPageEnum =
    OrderApplicationContext.LandingPageEnum.NoPreference;
  /**
   * DEPRECATED. DEPRECATED. The shipping preference:<ul><li>Displays the shipping address to the customer.</li><li>Enables the customer to choose an address on the PayPal site.</li><li>Restricts the customer from changing the address during the payment-approval process.</li></ul>.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.shipping_preference`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'shippingPreference'?: OrderApplicationContext.ShippingPreferenceEnum =
    OrderApplicationContext.ShippingPreferenceEnum.GetFromFile;
  /**
   * DEPRECATED. Configures a <strong>Continue</strong> or <strong>Pay Now</strong> checkout flow.  The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.user_action`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'userAction'?: OrderApplicationContext.UserActionEnum =
    OrderApplicationContext.UserActionEnum.Continue;
  'paymentMethod'?: PaymentMethod;
  /**
   * DEPRECATED. The URL where the customer is redirected after the customer approves the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.return_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'returnUrl'?: string;
  /**
   * DEPRECATED. The URL where the customer is redirected after the customer cancels the payment. The fields in `application_context` are now available in the `experience_context` object under the `payment_source` which supports them (eg. `payment_source.paypal.experience_context.cancel_url`). Please specify this field in the `experience_context` object instead of the `application_context` object.
   */
  'cancelUrl'?: string;
  'storedPaymentSource'?: StoredPaymentSource;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'brandName',
      baseName: 'brand_name',
      type: 'string',
    },
    {
      name: 'locale',
      baseName: 'locale',
      type: 'string',
    },
    {
      name: 'landingPage',
      baseName: 'landing_page',
      type: 'OrderApplicationContext.LandingPageEnum',
    },
    {
      name: 'shippingPreference',
      baseName: 'shipping_preference',
      type: 'OrderApplicationContext.ShippingPreferenceEnum',
    },
    {
      name: 'userAction',
      baseName: 'user_action',
      type: 'OrderApplicationContext.UserActionEnum',
    },
    {
      name: 'paymentMethod',
      baseName: 'payment_method',
      type: 'PaymentMethod',
    },
    {
      name: 'returnUrl',
      baseName: 'return_url',
      type: 'string',
    },
    {
      name: 'cancelUrl',
      baseName: 'cancel_url',
      type: 'string',
    },
    {
      name: 'storedPaymentSource',
      baseName: 'stored_payment_source',
      type: 'StoredPaymentSource',
    },
  ];

  static getAttributeTypeMap() {
    return OrderApplicationContext.attributeTypeMap;
  }
}

export namespace OrderApplicationContext {
  export enum LandingPageEnum {
    Login = <any>'LOGIN',
    Billing = <any>'BILLING',
    NoPreference = <any>'NO_PREFERENCE',
  }
  export enum ShippingPreferenceEnum {
    GetFromFile = <any>'GET_FROM_FILE',
    NoShipping = <any>'NO_SHIPPING',
    SetProvidedAddress = <any>'SET_PROVIDED_ADDRESS',
  }
  export enum UserActionEnum {
    Continue = <any>'CONTINUE',
    PayNow = <any>'PAY_NOW',
  }
}
