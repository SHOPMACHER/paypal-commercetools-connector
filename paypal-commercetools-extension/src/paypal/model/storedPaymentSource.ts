/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { NetworkTransactionReference } from './networkTransactionReference';
import { PaymentInitiator } from './paymentInitiator';
import { StoredPaymentSourcePaymentType } from './storedPaymentSourcePaymentType';
import { StoredPaymentSourceUsageType } from './storedPaymentSourceUsageType';

/**
 * Provides additional details to process a payment using a `payment_source` that has been stored or is intended to be stored (also referred to as stored_credential or card-on-file).<br/>Parameter compatibility:<br/><ul><li>`payment_type=ONE_TIME` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`usage=FIRST` is compatible only with `payment_initiator=CUSTOMER`.</li><li>`previous_transaction_reference` or `previous_network_transaction_reference` is compatible only with `payment_initiator=MERCHANT`.</li><li>Only one of the parameters - `previous_transaction_reference` and `previous_network_transaction_reference` - can be present in the request.</li></ul>
 */
export class StoredPaymentSource {
  'paymentInitiator': PaymentInitiator;
  'paymentType': StoredPaymentSourcePaymentType;
  'usage'?: StoredPaymentSourceUsageType;
  'previousNetworkTransactionReference'?: NetworkTransactionReference;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'paymentInitiator',
      baseName: 'payment_initiator',
      type: 'PaymentInitiator',
    },
    {
      name: 'paymentType',
      baseName: 'payment_type',
      type: 'StoredPaymentSourcePaymentType',
    },
    {
      name: 'usage',
      baseName: 'usage',
      type: 'StoredPaymentSourceUsageType',
    },
    {
      name: 'previousNetworkTransactionReference',
      baseName: 'previous_network_transaction_reference',
      type: 'NetworkTransactionReference',
    },
  ];

  static getAttributeTypeMap() {
    return StoredPaymentSource.attributeTypeMap;
  }
}

export namespace StoredPaymentSource {}
