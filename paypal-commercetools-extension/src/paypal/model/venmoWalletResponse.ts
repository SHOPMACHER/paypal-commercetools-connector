/**
 * Orders
 * An order represents a payment between two or more parties. Use the Orders API to create, update, retrieve, authorize, and capture orders.
 *
 * The version of the OpenAPI document: 2.13
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressPortable2 } from './addressPortable2';
import { Name2 } from './name2';
import { Phone2 } from './phone2';
import { VenmoWalletAttributesResponse } from './venmoWalletAttributesResponse';

/**
 * Venmo wallet response.
 */
export class VenmoWalletResponse {
  /**
   * The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>
   */
  'emailAddress'?: string;
  /**
   * The PayPal payer ID, which is a masked version of the PayPal account number intended for use with third parties. The account number is reversibly encrypted and a proprietary variant of Base32 is used to encode the result.
   */
  'accountId'?: string;
  /**
   * The Venmo user name chosen by the user, also know as a Venmo handle.
   */
  'userName'?: string;
  'name'?: Name2;
  'phoneNumber'?: Phone2;
  'address'?: AddressPortable2;
  'attributes'?: VenmoWalletAttributesResponse;

  static discriminator: string | undefined = undefined;

  static attributeTypeMap: Array<{
    name: string;
    baseName: string;
    type: string;
  }> = [
    {
      name: 'emailAddress',
      baseName: 'email_address',
      type: 'string',
    },
    {
      name: 'accountId',
      baseName: 'account_id',
      type: 'string',
    },
    {
      name: 'userName',
      baseName: 'user_name',
      type: 'string',
    },
    {
      name: 'name',
      baseName: 'name',
      type: 'Name2',
    },
    {
      name: 'phoneNumber',
      baseName: 'phone_number',
      type: 'Phone2',
    },
    {
      name: 'address',
      baseName: 'address',
      type: 'AddressPortable2',
    },
    {
      name: 'attributes',
      baseName: 'attributes',
      type: 'VenmoWalletAttributesResponse',
    },
  ];

  static getAttributeTypeMap() {
    return VenmoWalletResponse.attributeTypeMap;
  }
}
